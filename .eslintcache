[{"C:\\Users\\18602\\jirengu\\todolist\\src\\index.js":"1","C:\\Users\\18602\\jirengu\\todolist\\src\\answer.js":"2","C:\\Users\\18602\\jirengu\\todolist\\src\\answer2.js":"3","C:\\Users\\18602\\jirengu\\todolist\\src\\TodoList.js":"4","C:\\Users\\18602\\jirengu\\todolist\\src\\TodoBorder.js":"5","C:\\Users\\18602\\jirengu\\todolist\\src\\TodoItem.js":"6"},{"size":161,"mtime":1611910855084,"results":"7","hashOfConfig":"8"},{"size":1725,"mtime":1611909238118,"results":"9","hashOfConfig":"10"},{"size":387,"mtime":1611909231412,"results":"11","hashOfConfig":"10"},{"size":3145,"mtime":1612008734007,"results":"12","hashOfConfig":"8"},{"size":873,"mtime":1612007465960,"results":"13","hashOfConfig":"8"},{"size":730,"mtime":1612007478269,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"16murch",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x57qn",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\18602\\jirengu\\todolist\\src\\index.js",[],["30","31"],"C:\\Users\\18602\\jirengu\\todolist\\src\\answer.js",[],"C:\\Users\\18602\\jirengu\\todolist\\src\\answer2.js",[],"C:\\Users\\18602\\jirengu\\todolist\\src\\TodoList.js",[],"C:\\Users\\18602\\jirengu\\todolist\\src\\TodoBorder.js",["32"],"import { Component, Fragment } from \"react\";\r\nimport TodoItem from './TodoItem'\r\n\r\nclass TodoBorder extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='border'>\r\n                <div className='wrapper'>\r\n                    <h2>{this.props.title}</h2>\r\n                    <div className='number'>{this.props.taskList.length}</div>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        this.props.taskList.map((item, index) => {\r\n                            return <TodoItem item={item} key={index} index={index} checked={this.props.checked}\r\n                                handleDelete={this.props.handleDelete} handleClick={this.props.handleClick} />\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoBorder","C:\\Users\\18602\\jirengu\\todolist\\src\\TodoItem.js",["33"],"import { Component, Fragment } from \"react\";\r\n\r\nclass TodoItem extends Component {\r\n\r\n    handleDelete = () => {\r\n        this.props.handleDelete(this.props.index)\r\n    }\r\n    handleClick = () => {\r\n        this.props.handleClick(this.props.index)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='item'>\r\n                <input type=\"checkbox\" className='input' onClick={this.handleClick} checked={this.props.checked}></input>\r\n                <div onClick={this.handleClick} className='task'>\r\n                    {this.props.item}\r\n                </div>\r\n                <div onClick={this.handleDelete} className=\"deleteBtn\">删除</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoItem",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":21,"nodeType":"40","messageId":"41","endLine":1,"endColumn":29},{"ruleId":"38","severity":1,"message":"39","line":1,"column":21,"nodeType":"40","messageId":"41","endLine":1,"endColumn":29},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]