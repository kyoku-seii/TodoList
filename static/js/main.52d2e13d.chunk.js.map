{"version":3,"sources":["TodoItem.js","TodoBorder.js","TodoList.js","index.js"],"names":["TodoItem","handleDelete","props","index","handleClick","className","this","checked","join","type","onClick","readOnly","item","xlinkHref","Component","TodoBorder","title","taskList","length","map","TodoList","keyDown","e","keyCode","addTask","handleInput","setState","inputValue","target","value","state","prevState","moveItem","completedList","handleItemClick","handleItemDelete","newTaskList","splice","listener","localStorage","setItem","JSON","stringify","getItem","competedList","parse","window","addEventListener","placeholder","onChange","onKeyDown","maxLength","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52d2e13d.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass TodoItem extends Component {\r\n\r\n    handleDelete = () => {\r\n        this.props.handleDelete(this.props.index)\r\n    }\r\n    handleClick = () => {\r\n        this.props.handleClick(this.props.index)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={['item', this.props.checked ? 'checked' : 'unchecked'].join(' ')}>\r\n                <input type=\"checkbox\" className='input' onClick={this.handleClick} checked={this.props.checked} readOnly></input>\r\n                <div onClick={this.handleClick} className='task'>\r\n                    {this.props.item}\r\n                </div>\r\n                <div onClick={this.handleDelete} className=\"deleteBtn\">\r\n                    <svg className=\"icon\">\r\n                        <use xlinkHref=\"#icon-shanchu\"></use>\r\n                    </svg>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default TodoItem","import { Component } from \"react\";\r\nimport TodoItem from './TodoItem'\r\n\r\nclass TodoBorder extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='border'>\r\n                <div className='wrapper'>\r\n                    <h2>{this.props.title}</h2>\r\n                    <div className='number'>{this.props.taskList.length}</div>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        this.props.taskList.map((item, index) => {\r\n                            return <TodoItem item={item} key={index} index={index} checked={this.props.checked}\r\n                                handleDelete={this.props.handleDelete} handleClick={this.props.handleClick} />\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoBorder","import { Component, Fragment } from \"react\";\r\nimport TodoBorder from \"./TodoBorder\"\r\nimport './style.css'\r\n\r\n\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const taskList = localStorage.getItem('taskList')\r\n        const competedList = localStorage.getItem('completedList')\r\n        this.state = {\r\n            inputValue: '',\r\n            taskList: taskList ? JSON.parse(taskList) : [],\r\n            completedList: competedList ? JSON.parse(competedList) : []\r\n        }\r\n    }\r\n    keyDown = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.addTask()\r\n        }\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState(() => {\r\n            return { inputValue: e.target.value }\r\n        })\r\n    }\r\n\r\n    addTask = () => {\r\n        if (this.state.inputValue !== '') {\r\n            this.setState((prevState) => {\r\n                return {\r\n                    taskList: [...prevState.taskList, this.state.inputValue],\r\n                    inputValue: ''\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClick = (index) => {\r\n        const moveItem = this.handleDelete(index)\r\n        this.setState((prevState) => {\r\n            return {\r\n                completedList: [...prevState.completedList, moveItem]\r\n            }\r\n        })\r\n    }\r\n    handleItemClick = (index) => {\r\n        const moveItem = this.handleItemDelete(index)\r\n        this.setState((prevState) => {\r\n            return {\r\n                taskList: [...prevState.taskList, moveItem]\r\n            }\r\n        })\r\n    }\r\n    handleDelete = (index) => {\r\n        this.setState((prevState) => {\r\n            const newTaskList = [...prevState.taskList]\r\n            newTaskList.splice(index, 1)\r\n            return {\r\n                taskList: newTaskList\r\n            }\r\n        })\r\n        return this.state.taskList[index]\r\n    }\r\n    handleItemDelete = (index) => {\r\n        this.setState((prevState) => {\r\n            const newTaskList = [...prevState.completedList]\r\n            newTaskList.splice(index, 1)\r\n            return {\r\n                completedList: newTaskList\r\n            }\r\n        })\r\n        return this.state.completedList[index]\r\n    }\r\n    listener = (e) => {\r\n        localStorage.setItem('taskList', JSON.stringify(this.state.taskList))\r\n        localStorage.setItem('completedList', JSON.stringify(this.state.completedList))\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('beforeunload', this.listener)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className='header'>\r\n                    <div className='wrapper'>\r\n                        <div className='nav'>ToDoList</div>\r\n                        <input className='input' placeholder=\"添加todo\" value={this.state.inputValue} onChange={this.handleInput} onKeyDown={this.keyDown} maxLength=\"25\" />\r\n                        <button className='button' onClick={this.addTask}>添加</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"context\">\r\n                    <div className='taskList'>\r\n                        <TodoBorder title='正在进行'\r\n                            taskList={this.state.taskList} handleDelete={this.handleDelete} handleClick={this.handleClick} checked='' />\r\n                        <TodoBorder title='已经完成' taskList={this.state.completedList} handleDelete={this.handleItemDelete} handleClick={this.handleItemClick} checked='checked' />\r\n                    </div>\r\n                    <div className='copyright'>\r\n                        Created by WXC<br />\r\n                        Copyright © 2021\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TodoList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './TodoList';\n\nReactDOM.render(<TodoList />, document.getElementById('root'));\n"],"sourceRoot":""}